:javascript
  $(function() {
    if (gon.current_dealer.grocer || gon.current_dealer.courier) {
      $('#dataTable').DataTable({
        paging: true,
        searching: true,
        ordering: true,
        language: {
          search: 'Buscar',
          paginate: {
            first: 'Primero',
            previous: 'Anterior',
            next: 'Siguiente',
            last: 'Último'
          },
          info: 'Mostrando _START_ de _END_ registros',
          lengthMenu: 'Mostrar _MENU_ registros'
        },
        "footerCallback": null
      });
    } else {
      $('#dataTable').DataTable({
        paging: true,
        searching: true,
        ordering: true,
        language: {
          search: 'Buscar',
          paginate: {
            first: 'Primero',
            previous: 'Anterior',
            next: 'Siguiente',
            last: 'Último'
          },
          info: 'Mostrando _START_ de _END_ registros',
          lengthMenu: 'Mostrar _MENU_ registros'
        },
        "footerCallback": function (row, data, start, end, display) {
          var api = this.api();
 
          api.columns(3, {
            page: 'current'
          }).every(function() {
            var sum = this
              .data()
              .reduce(function(a, b) {
                var x = parseFloat(a) || 0;
                var y = parseFloat(b) || 0;
                return x + y;
              }, 0);
            //console.log(sum); //alert(sum);
            $(this.footer()).html('Q ' + sum);
          });
        }
      });
    }
  });

- model_class = TransactionDetail
- if @transaction.type_id == Parameter.transaction_type_return.first.int_value
  - content_for :title, t('modules.returns')
- elsif @transaction.type_id == Parameter.transaction_type_in.first.int_value
  - content_for :title, t('modules.restock')
- else
  - content_for :title, model_class.model_name.human.pluralize(I18n.locale).titleize

- unless notice.nil?
  = bootstrap_notice(notice, alert.nil? ? 'success' : 'danger')

- unless @transaction.type_id == Parameter.transaction_type_return.first.int_value || @transaction.type_id == Parameter.transaction_type_in.first.int_value
  = render 'parent', transaction: @transaction, action: t('helpers.titles.new', model: model_class.model_name.human), model_class: model_class
= render 'detail', transaction: @transaction, action: t('helpers.titles.new', model: model_class.model_name.human), model_class: model_class, title: @title