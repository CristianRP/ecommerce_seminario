:javascript
  function validNegativeNumber(view, group) {
    $(view).keyup(function() {
      const value = $(this).val();
      var error = '';
      $('#lblIntegerError').remove();
      $(group).removeClass('has-warning');
      if (isNaN(value)) error = 'El valor debe ser un número'
      else if (parseInt(value, 10) != value || value <= 0) error = 'El valor debe ser un número positivo, mayor a cero.';
      else return true;
      $(this).after('<label style="color: red;" id="lblIntegerError"><br/>' + error + '</label>');
      $(group).addClass('has-warning');
      return false;
    });
  }
  $(function() {
    $('#product_category_id').select2();
    $('#product_characteristic_id').select2();
    validNegativeNumber('#product_min', '#formGroupMin');
    validNegativeNumber('#product_quantity', '#formGroupQuantity');
    validNegativeNumber('#product_max', '#formGroupMax');
    $('#product_max').change(function() {
      $('#lblError').remove();
      if (parseInt($(this).val()) < parseInt($('#product_min').val())) {
        $(this).after('<label style="color: red;" id="lblError"><br/>El valor no puede ser menor a la cantidad miníma.</label>');
        $('#formGroupMax').addClass('has-warning');
      } else {
        $('#lblError').remove();
        $('#formGroupMax').removeClass('has-warning');
      }
    });
  });
- model_class = Product
= bootstrap_card t('general.datos') do 
  = form_with(model: product, local: true) do |f|
    - if product.errors.any?
      = bootstrap_error_alert 'danger' do 
        #error_explanation
          %h5
            = t('activerecord.errors.messages.record_invalid', errors: pluralize(product.errors.count, "error"))
          %ul
            - product.errors.full_messages.each do |message|
              %li= message

    .form-group
      = f.label :description
      = bootstrap_text_field f, :description
    .form-group
      = f.label :sku
      = bootstrap_text_field f, :sku
    .form-group
      = f.label :category
      = f.collection_select :category_id, Category.all, :id, :name, { prompt: true }, { class: 'form-control' }
    .form-group
      = f.label :active
      = f.check_box :active, checked: true
    .form-group
      = f.label :price
      = bootstrap_text_field f, :price
    .form-group
      = f.label :cost
      = bootstrap_text_field f, :cost
    .form-group{id: 'formGroupMin'}
      = f.label :min
      = f.number_field :min, class: 'form-control', step: :any, min: 0
    .form-group{id: 'formGroupMax'}
      = f.label :max
      = f.number_field :max, class: 'form-control'
    .form-group{id: 'formGroupQuantity'}
      = f.label :quantity
      = bootstrap_text_field f, :quantity
    .form-group
      = f.label :weight
      = bootstrap_text_field f, :weight
    .form-group
      = f.label :characteristic
      = f.collection_select :characteristic_id, Characteristic.all, :id, :name, { prompt: true }, { class: 'form-control' }
    .form-group
      = f.label :images
      = f.file_field :images, multiple: true, class: 'form-control'
    - if product.images.attached?
      = render 'images', product: product
    .text-right
      %br
      = bootstrap_button('primary', t('helpers.links.back'), 'arrow-left', products_path)
      = bootstrap_submit_button(f, action)
